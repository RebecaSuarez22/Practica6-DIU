/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practica6;

import java.awt.Dimension;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;

/**
 *
 * @author USUARIO
 */
public class Practica6 extends javax.swing.JFrame {
    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filtro = null;
    public boolean img; //Parametro para comprobar si hay una imagen abierta
    
    public Practica6() {
        initComponents();
        img = false;
        imagen.setSize(new Dimension(500 ,500));  
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagen1 = new com.mycompany.practica6.Imagen();
        imagen = new com.mycompany.practica6.Imagen();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFicheros = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        cerrar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        menuEdicion = new javax.swing.JMenu();
        menuFiltros = new javax.swing.JMenu();
        suavizado = new javax.swing.JMenuItem();
        realce = new javax.swing.JMenuItem();
        polarizado = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        imagen.setMinimumSize(new java.awt.Dimension(500, 500));
        getContentPane().add(imagen, java.awt.BorderLayout.CENTER);

        jMenuBar1.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jMenuBar1HierarchyChanged(evt);
            }
        });

        menuFicheros.setMnemonic('F');
        menuFicheros.setText("Ficheros");

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        menuFicheros.add(abrir);

        guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        menuFicheros.add(guardar);

        cerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cerrar.setText("Cerrar");
        menuFicheros.add(cerrar);
        menuFicheros.add(jSeparator1);

        salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        menuFicheros.add(salir);

        jMenuBar1.add(menuFicheros);

        menuEdicion.setMnemonic('E');
        menuEdicion.setText("Edición");

        menuFiltros.setText("Filtros");

        suavizado.setText("Suavizado");
        suavizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suavizadoActionPerformed(evt);
            }
        });
        menuFiltros.add(suavizado);

        realce.setText("Realce");
        realce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realceActionPerformed(evt);
            }
        });
        menuFiltros.add(realce);

        polarizado.setText("Polarizado");
        polarizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polarizadoActionPerformed(evt);
            }
        });
        menuFiltros.add(polarizado);

        menuEdicion.add(menuFiltros);

        jMenuBar1.add(menuEdicion);

        menuAyuda.setText("Ayuda");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Acerca de");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuAyuda.add(jMenuItem1);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        System.out.println("Abrir Fichero");
        filtro = new FileNameExtensionFilter("Texto", "txt");
        fc.addChoosableFileFilter(filtro);
        filtro = new FileNameExtensionFilter("Imágenes", "jpg", "jpeg");
        fc.addChoosableFileFilter(filtro);
        int res = fc.showOpenDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
            System.out.println("Aceptar");
            File fichero = fc.getSelectedFile();
            System.out.println("Fichero: "+ fichero.getAbsolutePath());
            int x = imagen.abrirImagen(fichero+"");
            
            if(x == 0){
                img = true;
                this.setPreferredSize(new Dimension(100, 1000));
            }
        }
        if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("Cancelar");
            
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        int res = fc.showSaveDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
            System.out.println("Aceptar");
            File fichero = fc.getSelectedFile();
            System.out.println("Fichero: "+ fichero.getAbsolutePath());
            int res2 = JOptionPane.showConfirmDialog(rootPane, "¿Quieres guardar el archivo?", "Guardar archivo", JOptionPane.YES_NO_OPTION);
            if(res2 == JOptionPane.YES_OPTION){
                System.out.println("Guardando fichero");
                imagen.guardarImagen(fichero);
            }
        }
        if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("Cancelar");
            
        }
        
    }//GEN-LAST:event_guardarActionPerformed

    private void realceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realceActionPerformed
        
        if(img ==false){
            JOptionPane.showMessageDialog(rootPane, "Primero debe abrir una imagen", "Error", JOptionPane.INFORMATION_MESSAGE);
        }else{
           String name = JOptionPane.showInputDialog(rootPane, "Introducir factor de realce:", "Factor realce", JOptionPane.OK_CANCEL_OPTION);
            System.out.println(name);
            imagen.getUmbral(Integer.parseInt(name)); 
        }
                
        
    }//GEN-LAST:event_realceActionPerformed

    private void suavizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suavizadoActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Proceso terminado", "Fin suavizado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_suavizadoActionPerformed

    private void polarizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polarizadoActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Proceso terminado", "Fin polarizado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_polarizadoActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        int res3 = JOptionPane.showConfirmDialog(rootPane, "¿Seguro que desea salir?", "Salir de la aplicación", JOptionPane.YES_NO_OPTION);
        if(res3 == 0){
            System.exit(WIDTH);
        }
    }//GEN-LAST:event_salirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Encontrarás toda la ayuda necesaria en *direccion inventada*", "Acerca De", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuBar1HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jMenuBar1HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuBar1HierarchyChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica6().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem cerrar;
    private javax.swing.JMenuItem guardar;
    private com.mycompany.practica6.Imagen imagen;
    private com.mycompany.practica6.Imagen imagen1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuEdicion;
    private javax.swing.JMenu menuFicheros;
    private javax.swing.JMenu menuFiltros;
    private javax.swing.JMenuItem polarizado;
    private javax.swing.JMenuItem realce;
    private javax.swing.JMenuItem salir;
    private javax.swing.JMenuItem suavizado;
    // End of variables declaration//GEN-END:variables
}
